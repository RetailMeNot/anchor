// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: Modal should be defined 1`] = `
.c1 {
  position: relative;
  width: 50rem;
  height: 42.375rem;
  margin: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  border-radius: 8px;
  background: #FFFFFF;
  box-shadow: 0 0.375rem 0.5rem 0.25rem rgba(0,0,0,0.13);
  overflow: hidden;
}

.c1 .c2 {
  padding: 4rem 2.5rem 0 2.5rem;
}

.c1 .c2:last-child {
  padding-bottom: 2.5rem;
}

.c1 .c3 {
  padding-left: 2.5rem;
}

.c1 .c4 {
  padding: 0 2.5rem;
  min-height: 6.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0,0,0,0.5);
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  overflow-y: auto;
  padding: 2rem 1rem;
  background-color: rgba(0,0,0,0.6);
}

<ThemeProvider
  theme={
    Object {
      "typography": Object {
        "fontFamily": "Avenir Next, Segoe UI, Helvetica, Roboto, sans-serif",
        "fontSize": "16px",
        "fontWeight": "normal",
        "lineHeight": "1.5rem",
        "scale": Object {
          "12": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "14": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "16": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "18": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "20": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "24": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "28": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "32": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "36": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "44": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "52": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "62": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
        },
        "tag": Object {
          "a": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
            text-decoration: none;",
              [Function],
              "
        ",
            ],
          ],
          "address": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "blockquote": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
            font-style: italic;",
              [Function],
              "
        ",
            ],
          ],
          "code": Array [
            Array [
              "
            font-family: SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            background: #323232;
            display: block;",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h1": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h2": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h3": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h4": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h5": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h6": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "label": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "p": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "pre": Array [
            Array [
              "
            font-family: SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
        ",
            ],
          ],
          "span": Array [
            Array [
              "
            // TODO
        ",
            ],
          ],
        },
      },
    }
  }
>
  <ModalProvider
    backgroundComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-jzgbtB",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0, 0, 0, 0.5);
  align-items: center;
  justify-content: center
",
            "
    box-sizing: border-box;
    overflow-y: auto;
    padding: ",
            [Function],
            ";
    background-color: ",
            [Function],
            ";
",
          ],
        },
        "displayName": "Styled(baseStyles__BaseModalBackground)",
        "foldedComponentIds": Array [
          "baseStyles__BaseModalBackground-sc-12bzkqq-0",
        ],
        "render": [Function],
        "styledComponentId": "sc-jzgbtB",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
  >
    <div>
      <button />
      <Component
        isOpen={true}
      >
        <i
          className="anchor-modal"
          isOpen={true}
        >
          <t
            WrapperComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Modal__styles-sc-1q9xwty-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
    position: relative;
    width: ",
                    [Function],
                    ";
    height: ",
                    [Function],
                    ";
    margin: ",
                    [Function],
                    ";

    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-between;

    border-radius: ",
                    "8px",
                    ";
    background: ",
                    [Function],
                    ";
    ",
                    [Function],
                    "
    box-shadow: ",
                    [Function],
                    ";

    overflow: hidden;

    // The Modal Content component only gets its bottom padding if
    // its the last-child of the modal. Furthermore, if the Modal Header
    // comes before it, then the Content loses its top padding
    // (see Modal Header styles). The goal is that we have full padding
    // in isolation, but lose the top or bottom padding if the Header or
    // Footer (respectively) are also used.
    ",
                    ".c2",
                    " {
        padding: ",
                    [Function],
                    ";
        &:last-child {
            padding-bottom: ",
                    [Function],
                    ";
        }
    }
    ",
                    ".c3",
                    " {
        padding-left: ",
                    [Function],
                    "rem;
    }
    ",
                    ".c4",
                    " {
        padding: ",
                    [Function],
                    ";
        min-height: ",
                    [Function],
                    "rem;
    }
",
                  ],
                },
                "displayName": "Modal__styles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Modal__styles-sc-1q9xwty-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            backgroundProps={Object {}}
            className="anchor-modal"
            isOpen={true}
          >
            <Portal
              containerInfo={
                .c1 {
  position: relative;
  width: 50rem;
  height: 42.375rem;
  margin: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  border-radius: 8px;
  background: #FFFFFF;
  box-shadow: 0 0.375rem 0.5rem 0.25rem rgba(0,0,0,0.13);
  overflow: hidden;
}

.c1 .c2 {
  padding: 4rem 2.5rem 0 2.5rem;
}

.c1 .c2:last-child {
  padding-bottom: 2.5rem;
}

.c1 .c3 {
  padding-left: 2.5rem;
}

.c1 .c4 {
  padding: 0 2.5rem;
  min-height: 6.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0,0,0,0.5);
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  overflow-y: auto;
  padding: 2rem 1rem;
  background-color: rgba(0,0,0,0.6);
}

<div>
                  <div
                    class="c0"
                  >
                    <div
                      class="anchor-modal c1"
                    >
                      Contents
                    </div>
                  </div>
                </div>
              }
            >
              <Styled(baseStyles__BaseModalBackground)
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzgbtB",
                        "isStatic": false,
                        "lastClassName": "c0",
                        "rules": Array [
                          "
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0, 0, 0, 0.5);
  align-items: center;
  justify-content: center
",
                          "
    box-sizing: border-box;
    overflow-y: auto;
    padding: ",
                          [Function],
                          ";
    background-color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "Styled(baseStyles__BaseModalBackground)",
                      "foldedComponentIds": Array [
                        "baseStyles__BaseModalBackground-sc-12bzkqq-0",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzgbtB",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={[Function]}
                  onClick={[Function]}
                >
                  <div
                    className="c0"
                    onClick={[Function]}
                  >
                    <Modal__styles
                      className="anchor-modal"
                    >
                      <StyledComponent
                        className="anchor-modal"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Modal__styles-sc-1q9xwty-0",
                              "isStatic": false,
                              "lastClassName": "c1",
                              "rules": Array [
                                "
    position: relative;
    width: ",
                                [Function],
                                ";
    height: ",
                                [Function],
                                ";
    margin: ",
                                [Function],
                                ";

    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-between;

    border-radius: ",
                                "8px",
                                ";
    background: ",
                                [Function],
                                ";
    ",
                                [Function],
                                "
    box-shadow: ",
                                [Function],
                                ";

    overflow: hidden;

    // The Modal Content component only gets its bottom padding if
    // its the last-child of the modal. Furthermore, if the Modal Header
    // comes before it, then the Content loses its top padding
    // (see Modal Header styles). The goal is that we have full padding
    // in isolation, but lose the top or bottom padding if the Header or
    // Footer (respectively) are also used.
    ",
                                ".c2",
                                " {
        padding: ",
                                [Function],
                                ";
        &:last-child {
            padding-bottom: ",
                                [Function],
                                ";
        }
    }
    ",
                                ".c3",
                                " {
        padding-left: ",
                                [Function],
                                "rem;
    }
    ",
                                ".c4",
                                " {
        padding: ",
                                [Function],
                                ";
        min-height: ",
                                [Function],
                                "rem;
    }
",
                              ],
                            },
                            "displayName": "Modal__styles",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Modal__styles-sc-1q9xwty-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="anchor-modal c1"
                        >
                          Contents
                        </div>
                      </StyledComponent>
                    </Modal__styles>
                  </div>
                </StyledComponent>
              </Styled(baseStyles__BaseModalBackground)>
            </Portal>
          </t>
        </i>
      </Component>
    </div>
    <div />
  </ModalProvider>
</ThemeProvider>
`;

exports[`Component: Modal should render with modal components 1`] = `
.c10 {
  box-sizing: border-box;
  width: 100%;
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c3 {
  box-sizing: border-box;
  min-height: 4rem;
  padding: 1.25rem 4.75rem 1.25rem 2rem;
  width: 100%;
  border-radius: 8px 8px 0 0;
  margin-bottom: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-order: -1;
  -ms-flex-order: -1;
  order: -1;
  color: #595959;
  background: #FFFFFF;
}

.c3 ~ .c9.c9 {
  padding-top: 0;
}

.c12 {
  box-sizing: border-box;
  width: 100%;
  border-radius: 0 0 8px 8px;
  margin-top: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
  justify-self: flex-end;
  background: transparent;
}

.c7 {
  position: relative;
  border-radius: 1.5rem;
  font-weight: 600;
  font-family: Avenir Next,Segoe UI,Helvetica,Roboto,sans-serif;
  text-align: center;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  outline: none !important;
  margin: 0;
  -webkit-transition: 500ms ease background-color, 500ms ease border-color, 500ms ease color, 500ms ease fill;
  transition: 500ms ease background-color, 500ms ease border-color, 500ms ease color, 500ms ease fill;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  border: solid thin transparent;
  background-color: transparent;
  color: #0074A6;
  padding: 0;
  font-size: 1rem;
  height: 3rem;
  width: 3rem;
}

.c7 + .c6 {
  margin-left: 1rem;
}

.c7:hover,
.c7:focus,
.c7:active {
  background: rgba(128,128,128,0.16);
  color: #0074A6;
}

.c8 {
  display: inline-block;
  height: 1.5rem;
  width: 1.5rem;
  line-height: 0;
}

.c5 {
  position: absolute;
  height: 3rem;
  width: 3rem;
  margin: 0.5rem;
  top: 0;
  right: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}

.c1 {
  position: relative;
  width: 50rem;
  height: 42.375rem;
  margin: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  border-radius: 8px;
  background: #FFFFFF;
  box-shadow: 0 0.375rem 0.5rem 0.25rem rgba(0,0,0,0.13);
  overflow: hidden;
}

.c1 .c9 {
  padding: 4rem 2.5rem 0 2.5rem;
}

.c1 .c9:last-child {
  padding-bottom: 2.5rem;
}

.c1 .c2 {
  padding-left: 2.5rem;
}

.c1 .c11 {
  padding: 0 2.5rem;
  min-height: 6.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0,0,0,0.5);
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  overflow-y: auto;
  padding: 2rem 1rem;
  background-color: rgba(0,0,0,0.6);
}

.c4 {
  box-sizing: border-box;
  font-family: Avenir Next,Segoe UI,Helvetica,Roboto,sans-serif;
  font-size: 16px;
  font-weight: normal;
  line-height: 1.5rem;
  margin: 0;
  padding: 0;
  color: inherit;
  font-size: 1.25rem;
  line-height: 1.5rem;
  text-align: inherit;
  text-transform: none;
  font-weight: bold;
}

.c4 small {
  font-size: 87.5%;
}

<ThemeProvider
  theme={
    Object {
      "typography": Object {
        "fontFamily": "Avenir Next, Segoe UI, Helvetica, Roboto, sans-serif",
        "fontSize": "16px",
        "fontWeight": "normal",
        "lineHeight": "1.5rem",
        "scale": Object {
          "12": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "14": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "16": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "18": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "20": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "24": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "28": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "32": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "36": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "44": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "52": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "62": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
        },
        "tag": Object {
          "a": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
            text-decoration: none;",
              [Function],
              "
        ",
            ],
          ],
          "address": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "blockquote": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
            font-style: italic;",
              [Function],
              "
        ",
            ],
          ],
          "code": Array [
            Array [
              "
            font-family: SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
            background: #323232;
            display: block;",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h1": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h2": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h3": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h4": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h5": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "h6": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "label": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "p": Array [
            Array [
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "",
              [Function],
              "
        ",
            ],
          ],
          "pre": Array [
            Array [
              "
            font-family: SFMono-Regular, Menlo, Monaco, Consolas,
                'Liberation Mono', 'Courier New', monospace;
        ",
            ],
          ],
          "span": Array [
            Array [
              "
            // TODO
        ",
            ],
          ],
        },
      },
    }
  }
>
  <ModalProvider
    backgroundComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-jzgbtB",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0, 0, 0, 0.5);
  align-items: center;
  justify-content: center
",
            "
    box-sizing: border-box;
    overflow-y: auto;
    padding: ",
            [Function],
            ";
    background-color: ",
            [Function],
            ";
",
          ],
        },
        "displayName": "Styled(baseStyles__BaseModalBackground)",
        "foldedComponentIds": Array [
          "baseStyles__BaseModalBackground-sc-12bzkqq-0",
        ],
        "render": [Function],
        "styledComponentId": "sc-jzgbtB",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
  >
    <div>
      <button />
      <Component
        isOpen={true}
      >
        <i
          className="anchor-modal"
          isOpen={true}
        >
          <t
            WrapperComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Modal__styles-sc-1q9xwty-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
    position: relative;
    width: ",
                    [Function],
                    ";
    height: ",
                    [Function],
                    ";
    margin: ",
                    [Function],
                    ";

    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-between;

    border-radius: ",
                    "8px",
                    ";
    background: ",
                    [Function],
                    ";
    ",
                    [Function],
                    "
    box-shadow: ",
                    [Function],
                    ";

    overflow: hidden;

    // The Modal Content component only gets its bottom padding if
    // its the last-child of the modal. Furthermore, if the Modal Header
    // comes before it, then the Content loses its top padding
    // (see Modal Header styles). The goal is that we have full padding
    // in isolation, but lose the top or bottom padding if the Header or
    // Footer (respectively) are also used.
    ",
                    ".c9",
                    " {
        padding: ",
                    [Function],
                    ";
        &:last-child {
            padding-bottom: ",
                    [Function],
                    ";
        }
    }
    ",
                    ".c2",
                    " {
        padding-left: ",
                    [Function],
                    "rem;
    }
    ",
                    ".c11",
                    " {
        padding: ",
                    [Function],
                    ";
        min-height: ",
                    [Function],
                    "rem;
    }
",
                  ],
                },
                "displayName": "Modal__styles",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Modal__styles-sc-1q9xwty-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            backgroundProps={Object {}}
            className="anchor-modal"
            isOpen={true}
          >
            <Portal
              containerInfo={
                .c10 {
  box-sizing: border-box;
  width: 100%;
  -webkit-order: 0;
  -ms-flex-order: 0;
  order: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c3 {
  box-sizing: border-box;
  min-height: 4rem;
  padding: 1.25rem 4.75rem 1.25rem 2rem;
  width: 100%;
  border-radius: 8px 8px 0 0;
  margin-bottom: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-order: -1;
  -ms-flex-order: -1;
  order: -1;
  color: #595959;
  background: #FFFFFF;
}

.c3 ~ .c9.c9 {
  padding-top: 0;
}

.c12 {
  box-sizing: border-box;
  width: 100%;
  border-radius: 0 0 8px 8px;
  margin-top: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-order: 1;
  -ms-flex-order: 1;
  order: 1;
  justify-self: flex-end;
  background: transparent;
}

.c7 {
  position: relative;
  border-radius: 1.5rem;
  font-weight: 600;
  font-family: Avenir Next,Segoe UI,Helvetica,Roboto,sans-serif;
  text-align: center;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  outline: none !important;
  margin: 0;
  -webkit-transition: 500ms ease background-color, 500ms ease border-color, 500ms ease color, 500ms ease fill;
  transition: 500ms ease background-color, 500ms ease border-color, 500ms ease color, 500ms ease fill;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  border: solid thin transparent;
  background-color: transparent;
  color: #0074A6;
  padding: 0;
  font-size: 1rem;
  height: 3rem;
  width: 3rem;
}

.c7 + .c6 {
  margin-left: 1rem;
}

.c7:hover,
.c7:focus,
.c7:active {
  background: rgba(128,128,128,0.16);
  color: #0074A6;
}

.c8 {
  display: inline-block;
  height: 1.5rem;
  width: 1.5rem;
  line-height: 0;
}

.c5 {
  position: absolute;
  height: 3rem;
  width: 3rem;
  margin: 0.5rem;
  top: 0;
  right: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
}

.c1 {
  position: relative;
  width: 50rem;
  height: 42.375rem;
  margin: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  border-radius: 8px;
  background: #FFFFFF;
  box-shadow: 0 0.375rem 0.5rem 0.25rem rgba(0,0,0,0.13);
  overflow: hidden;
}

.c1 .c9 {
  padding: 4rem 2.5rem 0 2.5rem;
}

.c1 .c9:last-child {
  padding-bottom: 2.5rem;
}

.c1 .c2 {
  padding-left: 2.5rem;
}

.c1 .c11 {
  padding: 0 2.5rem;
  min-height: 6.5rem;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0,0,0,0.5);
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  overflow-y: auto;
  padding: 2rem 1rem;
  background-color: rgba(0,0,0,0.6);
}

.c4 {
  box-sizing: border-box;
  font-family: Avenir Next,Segoe UI,Helvetica,Roboto,sans-serif;
  font-size: 16px;
  font-weight: normal;
  line-height: 1.5rem;
  margin: 0;
  padding: 0;
  color: inherit;
  font-size: 1.25rem;
  line-height: 1.5rem;
  text-align: inherit;
  text-transform: none;
  font-weight: bold;
}

.c4 small {
  font-size: 87.5%;
}

<div>
                  <div
                    class="c0"
                  >
                    <div
                      class="anchor-modal c1"
                    >
                      <div
                        class="anchor-modal-header c2 c3"
                      >
                        <span
                          class="anchor-typography c4"
                          scale="20"
                        >
                          Header Title
                        </span>
                        <div
                          class="anchor-modal-close c5"
                        >
                          <button
                            class="anchor-button c6 c7"
                          >
                            <span
                              class="anchor-icon close anchor-button-prefix c8"
                              scale="lg"
                            >
                              <svg
                                height="24"
                                viewBox="0 0 16 16"
                                width="24"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <g
                                  fill="none"
                                  fill-rule="evenodd"
                                >
                                  <path
                                    d="M0 0h16v16H0z"
                                  />
                                  <g
                                    fill="currentColor"
                                    fill-rule="nonzero"
                                  >
                                    <path
                                      d="M4.398 4.37l6.852 6.85-.495.495-6.852-6.85c-.292-.292-.354-.75-.073-1.032.283-.284.742-.222 1.035.07l6.85 6.851c.293.292.355.75.111.987l-.04.048c-.28.281-.74.218-1.031-.074l.495-.495c.033.034.055.044.036.078-.02.013-.027-.01-.065-.049L4.371 4.4c-.044-.043-.068-.047-.044-.072.025-.024.029 0 .071.043z"
                                    />
                                    <path
                                      d="M11.468 4.617l.248.248-6.851 6.85c-.292.293-.75.355-1.012.092l-.023-.021c-.281-.281-.218-.74.073-1.032l6.85-6.85c.292-.293.752-.355 1.013-.092l.023.021c.281.281.218.74-.073 1.031l-.248-.247z"
                                    />
                                  </g>
                                </g>
                              </svg>
                            </span>
                          </button>
                        </div>
                      </div>
                      <div
                        class="anchor-modal-content c9 c10"
                      >
                        Content
                      </div>
                      <div
                        class="anchor-modal-footer c11 c12"
                      >
                        Footer
                      </div>
                    </div>
                  </div>
                </div>
              }
            >
              <Styled(baseStyles__BaseModalBackground)
                onClick={[Function]}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-jzgbtB",
                        "isStatic": false,
                        "lastClassName": "c0",
                        "rules": Array [
                          "
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 30;
  background-color: rgba(0, 0, 0, 0.5);
  align-items: center;
  justify-content: center
",
                          "
    box-sizing: border-box;
    overflow-y: auto;
    padding: ",
                          [Function],
                          ";
    background-color: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "Styled(baseStyles__BaseModalBackground)",
                      "foldedComponentIds": Array [
                        "baseStyles__BaseModalBackground-sc-12bzkqq-0",
                      ],
                      "render": [Function],
                      "styledComponentId": "sc-jzgbtB",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={[Function]}
                  onClick={[Function]}
                >
                  <div
                    className="c0"
                    onClick={[Function]}
                  >
                    <Modal__styles
                      className="anchor-modal"
                    >
                      <StyledComponent
                        className="anchor-modal"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Modal__styles-sc-1q9xwty-0",
                              "isStatic": false,
                              "lastClassName": "c1",
                              "rules": Array [
                                "
    position: relative;
    width: ",
                                [Function],
                                ";
    height: ",
                                [Function],
                                ";
    margin: ",
                                [Function],
                                ";

    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-between;

    border-radius: ",
                                "8px",
                                ";
    background: ",
                                [Function],
                                ";
    ",
                                [Function],
                                "
    box-shadow: ",
                                [Function],
                                ";

    overflow: hidden;

    // The Modal Content component only gets its bottom padding if
    // its the last-child of the modal. Furthermore, if the Modal Header
    // comes before it, then the Content loses its top padding
    // (see Modal Header styles). The goal is that we have full padding
    // in isolation, but lose the top or bottom padding if the Header or
    // Footer (respectively) are also used.
    ",
                                ".c9",
                                " {
        padding: ",
                                [Function],
                                ";
        &:last-child {
            padding-bottom: ",
                                [Function],
                                ";
        }
    }
    ",
                                ".c2",
                                " {
        padding-left: ",
                                [Function],
                                "rem;
    }
    ",
                                ".c11",
                                " {
        padding: ",
                                [Function],
                                ";
        min-height: ",
                                [Function],
                                "rem;
    }
",
                              ],
                            },
                            "displayName": "Modal__styles",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Modal__styles-sc-1q9xwty-0",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="anchor-modal c1"
                        >
                          <Component
                            title="Header Title"
                          >
                            <styled.div
                              className="anchor-modal-header"
                            >
                              <StyledComponent
                                className="anchor-modal-header"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c2",
                                      "isStatic": false,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "
    box-sizing: border-box;
    min-height: 4rem;
    padding: 1.25rem 4.75rem 1.25rem 2rem;
    width: 100%;
    border-radius: ",
                                        "8px",
                                        " ",
                                        "8px",
                                        " 0 0;
    margin-bottom: 1rem;

    display: flex;
    order: -1;

    color: ",
                                        [Function],
                                        ";
    background: ",
                                        [Function],
                                        ";

    // If the header exists, remove the Content's padding.
    // We're preferring this selector to using Modal :first-child
    // in case there is a close button placed before it, and using a
    // double selector to ensure it takes precedence.
    & ~ ",
                                        ".c9",
                                        ".c9",
                                        " {
        padding-top: 0;
    }
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="anchor-modal-header c2 c3"
                                >
                                  <Component
                                    scale={20}
                                    weight="bold"
                                  >
                                    <styled.span
                                      className="anchor-typography"
                                      scale={20}
                                      tag="span"
                                      weight="bold"
                                    >
                                      <StyledComponent
                                        className="anchor-typography"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-gJWqzi",
                                              "isStatic": false,
                                              "lastClassName": "c4",
                                              "rules": Array [
                                                "
    box-sizing: border-box;
    // Global Font Properties
    font-family: ",
                                                [Function],
                                                ";
    font-size: ",
                                                [Function],
                                                ";
    font-weight: ",
                                                [Function],
                                                ";
    line-height: ",
                                                [Function],
                                                ";
    // Spacing",
                                                [Function],
                                                [Function],
                                                "
    // TODO: colors when theme colors are defined
    ",
                                                [Function],
                                                ";

    // Use a scale to set size & line-height
    ",
                                                [Function],
                                                "

    // Apply default styles for element
    ",
                                                [Function],
                                                "

    // CSS Overrides
    ",
                                                [Function],
                                                ";
    ",
                                                [Function],
                                                ";
    ",
                                                [Function],
                                                ";

    // Override Size & Line Height
    ",
                                                [Function],
                                                ";

    // Throw a warning that says you really shouldn't do this
    ",
                                                [Function],
                                                ";
    ",
                                                [Function],
                                                ";

    small {",
                                                [Function],
                                                "
    }
",
                                              ],
                                            },
                                            "displayName": "styled.span",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-gJWqzi",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        scale={20}
                                        tag="span"
                                        weight="bold"
                                      >
                                        <span
                                          className="anchor-typography c4"
                                          scale={20}
                                        >
                                          Header Title
                                        </span>
                                      </StyledComponent>
                                    </styled.span>
                                  </Component>
                                  <Component>
                                    <styled.div
                                      align="right"
                                      className="anchor-modal-close"
                                    >
                                      <StyledComponent
                                        align="right"
                                        className="anchor-modal-close"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-fhYwyz",
                                              "isStatic": false,
                                              "lastClassName": "c5",
                                              "rules": Array [
                                                "
    position: absolute;
    height: 3rem;
    width: 3rem;
    margin: 0.5rem;
    top: 0;
    ",
                                                [Function],
                                                "

    display: flex;
    justify-content: center;
    align-items: center;

    cursor: pointer;
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-fhYwyz",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="anchor-modal-close c5"
                                        >
                                          <Component
                                            circular={true}
                                            outline={false}
                                            prefix={<Unknown />}
                                            variant="minimal"
                                          >
                                            <styled.button
                                              $height={3}
                                              $size="md"
                                              borderRadius="1.5rem"
                                              buttonStyles={
                                                Object {
                                                  "base": Array [
                                                    "
                border: solid thin transparent;
                background-color: transparent;
                color: ",
                                                    "#0074A6",
                                                    ";
            ",
                                                  ],
                                                  "disabled": Array [
                                                    "
                border: solid thin ",
                                                    "#D3D3D3",
                                                    ";
                background-color: ",
                                                    "#D3D3D3",
                                                    ";
                color: ",
                                                    "#808080",
                                                    ";
            ",
                                                  ],
                                                  "focusOutline": Array [
                                                    "
                box-shadow: 0 0 0 2px ",
                                                    "rgba(128,128,128,0.4)",
                                                    ";
            ",
                                                  ],
                                                  "hover": Array [
                                                    "
                background: ",
                                                    "rgba(128,128,128,0.16)",
                                                    ";
                color: ",
                                                    "#0074A6",
                                                    ";
            ",
                                                  ],
                                                }
                                              }
                                              circular={true}
                                              className="anchor-button"
                                              colorTheme={
                                                Object {
                                                  "base": "#0074A6",
                                                  "dark": "#0074A6",
                                                  "light": "#0998D6",
                                                }
                                              }
                                              flip={false}
                                              iconOnly={true}
                                              outline={false}
                                              variant="minimal"
                                            >
                                              <StyledComponent
                                                $height={3}
                                                $size="md"
                                                borderRadius="1.5rem"
                                                buttonStyles={
                                                  Object {
                                                    "base": Array [
                                                      "
                border: solid thin transparent;
                background-color: transparent;
                color: ",
                                                      "#0074A6",
                                                      ";
            ",
                                                    ],
                                                    "disabled": Array [
                                                      "
                border: solid thin ",
                                                      "#D3D3D3",
                                                      ";
                background-color: ",
                                                      "#D3D3D3",
                                                      ";
                color: ",
                                                      "#808080",
                                                      ";
            ",
                                                    ],
                                                    "focusOutline": Array [
                                                      "
                box-shadow: 0 0 0 2px ",
                                                      "rgba(128,128,128,0.4)",
                                                      ";
            ",
                                                    ],
                                                    "hover": Array [
                                                      "
                background: ",
                                                      "rgba(128,128,128,0.16)",
                                                      ";
                color: ",
                                                      "#0074A6",
                                                      ";
            ",
                                                    ],
                                                  }
                                                }
                                                circular={true}
                                                className="anchor-button"
                                                colorTheme={
                                                  Object {
                                                    "base": "#0074A6",
                                                    "dark": "#0074A6",
                                                    "light": "#0998D6",
                                                  }
                                                }
                                                flip={false}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "c6",
                                                      "isStatic": false,
                                                      "lastClassName": "c7",
                                                      "rules": Array [
                                                        "
	position: relative;
    border-radius: ",
                                                        [Function],
                                                        ";
	font-weight: 600;
	font-family: ",
                                                        "Avenir Next, Segoe UI, Helvetica, Roboto, sans-serif",
                                                        ";
	text-align: center;
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    outline: none !important;

    margin: ",
                                                        [Function],
                                                        ";
    ",
                                                        [Function],
                                                        ";

	transition: ",
                                                        "500ms",
                                                        " ease background-color,
                ",
                                                        "500ms",
                                                        " ease border-color,
                ",
                                                        "500ms",
                                                        " ease color,
                ",
                                                        "500ms",
                                                        " ease fill;

	// These properties are deprecated but help make white text on colored backgrounds look more crisp in Chrome and
	// Firefox.
	-webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    /* Base and Disabled Styles */
    ",
                                                        [Function],
                                                        "

    /* Sizing */
    padding: ",
                                                        [Function],
                                                        ";
    font-size: ",
                                                        [Function],
                                                        "rem;
    height: ",
                                                        [Function],
                                                        "rem;
    ",
                                                        [Function],
                                                        "

    ",
                                                        [Function],
                                                        "

    /* State styles */
    ",
                                                        [Function],
                                                        "

    &:focus {
        ",
                                                        [Function],
                                                        "
    }

    /* Revealed State */
    ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "c6",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                iconOnly={true}
                                                outline={false}
                                                variant="minimal"
                                              >
                                                <button
                                                  className="anchor-button c6 c7"
                                                >
                                                  <Component
                                                    className="anchor-button-prefix"
                                                    scale="lg"
                                                  >
                                                    <AnchorIcon
                                                      className="anchor-icon close anchor-button-prefix"
                                                      scale="lg"
                                                    >
                                                      <StyledComponent
                                                        className="anchor-icon close anchor-button-prefix"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-gFaPwZ",
                                                              "isStatic": false,
                                                              "lastClassName": "c8",
                                                              "rules": Array [
                                                                "
    display: inline-block;
    height: ",
                                                                [Function],
                                                                ";
    width: ",
                                                                [Function],
                                                                ";
    line-height: 0;
",
                                                              ],
                                                            },
                                                            "displayName": "AnchorIcon",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-gFaPwZ",
                                                            "target": "span",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        scale="lg"
                                                      >
                                                        <span
                                                          className="anchor-icon close anchor-button-prefix c8"
                                                          scale="lg"
                                                        >
                                                          <svg
                                                            height={24}
                                                            viewBox="0 0 16 16"
                                                            width={24}
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fillRule="evenodd"
                                                            >
                                                              <path
                                                                d="M0 0h16v16H0z"
                                                              />
                                                              <g
                                                                fill="currentColor"
                                                                fillRule="nonzero"
                                                              >
                                                                <path
                                                                  d="M4.398 4.37l6.852 6.85-.495.495-6.852-6.85c-.292-.292-.354-.75-.073-1.032.283-.284.742-.222 1.035.07l6.85 6.851c.293.292.355.75.111.987l-.04.048c-.28.281-.74.218-1.031-.074l.495-.495c.033.034.055.044.036.078-.02.013-.027-.01-.065-.049L4.371 4.4c-.044-.043-.068-.047-.044-.072.025-.024.029 0 .071.043z"
                                                                />
                                                                <path
                                                                  d="M11.468 4.617l.248.248-6.851 6.85c-.292.293-.75.355-1.012.092l-.023-.021c-.281-.281-.218-.74.073-1.032l6.85-6.85c.292-.293.752-.355 1.013-.092l.023.021c.281.281.218.74-.073 1.031l-.248-.247z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </span>
                                                      </StyledComponent>
                                                    </AnchorIcon>
                                                  </Component>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </Component>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </Component>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Component>
                          <Component>
                            <styled.div
                              className="anchor-modal-content"
                            >
                              <StyledComponent
                                className="anchor-modal-content"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c9",
                                      "isStatic": true,
                                      "lastClassName": "c10",
                                      "rules": Array [
                                        "
    box-sizing: border-box;
    width: 100%;

    order: 0;
    flex-grow: 1;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c9",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="anchor-modal-content c9 c10"
                                >
                                  Content
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Component>
                          <Component>
                            <styled.div
                              className="anchor-modal-footer"
                            >
                              <StyledComponent
                                className="anchor-modal-footer"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "c11",
                                      "isStatic": false,
                                      "lastClassName": "c12",
                                      "rules": Array [
                                        "
    box-sizing: border-box;
    width: 100%;
    border-radius: 0 0 ",
                                        "8px",
                                        " ",
                                        "8px",
                                        ";
    margin-top: auto;
    ",
                                        [Function],
                                        ";

    display: flex;
    justify-content: center;
    align-items: center;

    order: 1;
    justify-self: flex-end;

    background: ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "c11",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="anchor-modal-footer c11 c12"
                                >
                                  Footer
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Component>
                        </div>
                      </StyledComponent>
                    </Modal__styles>
                  </div>
                </StyledComponent>
              </Styled(baseStyles__BaseModalBackground)>
            </Portal>
          </t>
        </i>
      </Component>
    </div>
    <div />
  </ModalProvider>
</ThemeProvider>
`;
