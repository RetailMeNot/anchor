// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: Cell should align content horizontally 1`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
}

<div
  className="c0 anchor-grid"
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Text
    </div>
  </div>
</div>
`;

exports[`Component: Cell should align content horizontally 2`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
}

<div
  className="c0 anchor-grid"
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Text
    </div>
  </div>
</div>
`;

exports[`Component: Cell should align content horizontally 3`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
}

<div
  className="c0 anchor-grid"
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Text
    </div>
  </div>
</div>
`;

exports[`Component: Cell should align content vertically 1`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
}

<div
  className="c0 anchor-grid"
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Text
    </div>
  </div>
</div>
`;

exports[`Component: Cell should align content vertically 2`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
}

<div
  className="c0 anchor-grid"
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Text
    </div>
  </div>
</div>
`;

exports[`Component: Cell should align content vertically 3`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
}

<div
  className="c0 anchor-grid"
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Text
    </div>
  </div>
</div>
`;

exports[`Component: Grid & Cell should be defined 1`] = `
.c1 {
  height: 100%;
  min-width: 0;
  grid-column-end: span 1;
  grid-row-end: span 1;
  background-color: rgba(255,0,0,0.4);
}

.c2 {
  box-sizing: border-box;
}

.c0 {
  display: grid;
  height: auto;
  grid-auto-flow: row;
  grid-auto-rows: minmax(1.25rem,auto);
  grid-template-rows: repeat(3,1fr);
  grid-template-columns: repeat(12,1fr);
  grid-gap: 0.5rem;
  -webkit-column-gap: 5rem;
  column-gap: 5rem;
  row-gap: 1rem;
  grid-template-areas: 'head head' 'nav main' 'nav foot';
  -webkit-box-pack: initial;
  -webkit-justify-content: initial;
  -ms-flex-pack: initial;
  justify-content: initial;
  background-color: rgba(255,0,0,0.4);
}

<div
  className="c0 anchor-grid"
  rows={3}
>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Cell 1
    </div>
  </div>
  <div
    className="c1 anchor-cell"
    height={1}
    width={1}
  >
    <div
      className="c2 anchor-cell-box"
    >
      Cell 2
    </div>
  </div>
</div>
`;
