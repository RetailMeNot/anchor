// REACT
import * as React from 'react';
// VENDOR
import styled from 'styled-components';
import classNames from 'classnames';
// STYLES
import { colors } from '../../theme';
// COMPONENTS
import { Menu, Item } from '../../Menu';
import { Container, Flex, Box } from '../../Grid';
import { DropDown } from '../../DropDown';
import { Icon } from '../../Icon';
import { AutoComplete } from '../../AutoComplete';
import { Avatar } from '../../Avatar';

export const StyledHeaderElement = styled.header`
  background-color: ${colors.main.grapePurchase.base};
  margin: 0;
  color: ${colors.neutrals.white.base};
`;

interface HeaderProps {
  className?: string;
  children?: any;
  primary?: any;
  secondary?: any;
  // TODO: do we really want this?
  disableSearch?: boolean;
}

/* tslint:disable max-line-length */
const LargeLogo = () => (
  <svg
    width="114px"
    height="22px"
    viewBox="0 0 114 22"
    version="1.1"
    xmlns="http://www.w3.org/2000/svg"
    xmlnsXlink="http://www.w3.org/1999/xlink"
  >
    <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
      <g fill="#FFFFFF">
        <path
          d="M18.8249268,20.2704754 C19.3055541,20.3212573 19.4550353,20.5914404 19.2059001,20.976912 C18.9899183,21.3108175 18.1643792,21.7860887 16.7928754,21.7860887 C15.6387106,21.7860887 14.6638843,21.4212043 13.9393565,20.6900631 C13.3402688,20.0853863 12.9406831,19.2395447 12.4999949,18.06117 C11.7374667,16.0226407 11.022439,13.4906057 10.6337105,12.0424402 C10.0231839,13.6819691 9.40916744,15.2746375 8.84827396,16.6312389 C7.31236033,20.3475305 5.39372851,22 2.95530567,22 C1.35502403,22 0,20.9982835 0,19.2566027 C0,16.9257345 1.89400912,13.5676609 7.94576475,11.115426 C9.00686742,8.26222999 10.1736344,4.94905616 10.8306921,3.07110735 C10.6356493,3.11522288 10.4169532,3.16463226 10.1608384,3.22208048 C6.19813467,4.11262584 5.12035837,5.96724244 5.12035837,7.41756477 C5.12035837,8.34261828 5.5463117,8.88200408 6.25746181,9.42158594 C6.59558771,9.67804418 6.48604578,10.3205623 5.34293207,10.3205623 C3.66645578,10.3205623 2.21875733,9.16473556 2.21875733,7.49501203 C2.21875733,5.02885624 4.2762069,2.6313246 9.7628037,1.55235694 C11.2308595,1.26374338 12.6178737,0.998462037 14.5128522,0.756120763 C18.797202,0.20810793 20.7272727,1.78352228 20.7272727,4.17595612 C20.7272727,6.77896807 18.3442994,9.09846424 13.2537985,10.9117103 C13.639231,12.2861539 14.424637,14.994847 15.217992,17.1878787 C15.5892713,18.2142999 16.0454699,19.007399 16.6319554,19.4912972 C17.2754416,20.022056 17.952275,20.1781269 18.8249268,20.2704754 Z M11.6590909,9.70588235 C12.1216189,9.53495554 12.6366044,9.3414284 13.1859975,9.12947916 C16.1091371,8.00136219 17.4886364,6.38458446 17.4886364,4.7501443 C17.4886364,3.07430186 16.3537505,2.38394745 14.1405726,2.64014775 C13.6064092,4.20602727 12.6777807,6.89641531 11.6590909,9.70588235 Z M6.01458249,15.4769514 C6.29208922,14.9283975 6.68169227,14.0263062 7.125,12.9411765 C2.75832123,15.1264084 1.94318182,17.8500878 1.94318182,18.5854233 C1.94318182,19.2565642 2.31442763,19.4697348 2.79191106,19.3988027 C3.84628042,19.2421532 4.67411366,18.1257684 6.01458249,15.4769514 Z M77.1785292,15.7720693 C77.4428938,15.7720693 77.608097,15.9541573 77.608097,16.3016534 C77.608097,17.2613384 75.9719316,18.7647059 73.7735203,18.7647059 C72.0851959,18.7647059 71.0904073,17.9404451 70.7120069,16.6036772 C69.4492839,18.202755 68.2674766,18.7281691 67.2300486,18.7281691 C66.230302,18.7281691 65.3116695,17.9364737 65.3116695,16.6128113 C65.3116695,15.4658756 65.6652795,14.5478901 66.0652972,13.2939256 C66.6499536,11.5880175 67.9035538,8.54156866 68.9679538,5.98975573 C66.3508824,10.5183251 63.4462426,15.5101565 62.0889195,17.9563306 C61.5716929,18.8886131 60.293699,18.8663733 60.3805645,17.9088726 C60.5273236,16.2929164 61.5669331,10.1096697 62.4351916,5.48221283 C61.3908223,8.45578676 59.9847116,12.4192282 59.0319676,14.7130997 C57.8814954,17.4823459 56.6850123,18.676144 54.9992661,18.676144 C54.0407707,18.676144 52.9912449,18.1052575 52.5698084,17.1372326 C52.3685105,16.6747649 52.4107533,16.3040362 53.1399872,16.2436712 C55.8421392,16.0202808 56.9824969,14.2331579 58.4203392,11.1801563 C59.7764724,8.3007042 61.6954465,2.59839219 61.9320459,2.05093688 C62.3858091,1.00110146 62.5339565,0.77751253 63.188026,0.561667799 C63.9400671,0.313456286 64.4336932,0.210398866 64.9957408,0.0449907134 C65.4576353,-0.0910291957 65.7491702,0.076761787 65.6258133,0.611310101 C65.3949652,1.61070894 63.9069471,11.271101 63.9069471,11.271101 C63.9069471,11.271101 68.9229344,3.44092135 70.0880825,1.50487155 C70.8306041,0.270962475 71.8067503,0.346617344 73.5440605,0.0916544778 C74.0275721,0.0205667005 74.2832106,0.0916544778 74.1382364,0.570404844 C73.9934605,1.04915521 72.9086333,3.31244707 71.1770745,7.40396565 C70.3034614,9.46848973 69.311251,12.1481812 68.6175169,14.1279163 C68.1595889,15.4350974 68.1213125,16.1195654 68.6171202,16.1443866 C69.0687019,16.1670235 69.7773102,15.6245324 70.6279179,14.1481703 C71.2458926,10.5131623 74.8442666,6.95817777 77.8474729,6.95817777 C79.0622018,6.95817777 80.3181818,7.7796586 80.3181818,9.41785458 C80.3181818,11.684125 77.9051849,13.9982506 73.9058017,13.9982506 C73.785023,13.9982506 73.6777302,13.9950734 73.5801553,13.9899106 C73.5131221,14.30226 73.4760356,14.601901 73.4760356,14.8785079 C73.4760356,16.0030053 73.9222626,16.541525 74.7651356,16.541525 C76.0046549,16.541525 76.6991823,15.7720693 77.1785292,15.7720693 Z M77.24256,9.05882353 C76.4696995,9.05882353 75.2369034,10.6178705 74.4886364,12.2941176 C77.4980389,12.200167 78.3951518,9.05882353 77.24256,9.05882353 Z M95.9726324,3.81597787 C95.0002496,4.50605374 93.8656039,6.25751436 93.1189955,8.11308209 C91.9282048,11.072615 90.9122201,13.7254909 89.8504434,16.8830812 C89.5117818,17.8899708 89.0877082,18.074551 87.8264378,18.6087592 C87.2112324,18.8693199 86.8972587,18.8689293 86.9189601,18.0919347 C86.947829,17.0670754 87.1198476,11.447635 87.2924634,7.03529022 C87.2928616,7.02239891 87.3069974,6.99876484 87.2940562,6.99661629 C87.2854951,6.99524903 87.2890788,7.01263277 87.2864906,7.02064101 C86.6489865,9.06840649 85.787699,11.7128835 84.7655424,14.4448652 C83.7121277,17.2606404 82.6834008,18.6605197 80.725694,18.6605197 C79.6306683,18.6605197 78.7347382,18.074551 78.5023937,17.537413 C78.3048909,17.0805526 78.2555152,16.6910787 78.9668837,16.5119676 C81.4225285,15.8933799 82.3184586,14.6563999 83.8944992,11.3441138 C85.3701956,8.24297184 86.539683,4.71973702 87.160264,2.63368824 C86.8476839,2.63095372 86.4552665,2.62880516 85.8097987,2.62880516 C80.8324092,2.62880516 81.1400119,5.31351869 82.6332287,6.04597964 C83.0029492,6.22723931 82.981646,6.95423121 82.2185126,6.95423121 C78.1038043,6.95423121 77.6060654,0.848827399 84.2592423,0.848827399 C85.1320773,0.848827399 87.2494588,0.849413368 88.7874721,0.849999337 C89.1139889,0.839256576 89.441302,0.825974618 89.793303,0.825974618 C89.8918553,0.825974618 90.0664621,0.837108024 90.1405257,0.888282629 C90.3059741,0.97598262 90.3312592,1.16778973 90.3149334,1.5340202 C90.2838745,2.2354248 89.8036559,8.51232214 89.520542,12.4744476 C89.5187502,12.5006208 89.5249221,12.5223017 89.5348769,12.4912453 C90.112055,10.7128302 90.8574688,8.48204709 91.5262309,6.68077913 C92.5762609,3.85191728 93.9153778,0.647058824 96.5316928,0.647058824 C98.1710458,0.647058824 98.7434455,2.36414261 98.3203674,2.70595772 C98.044421,2.92882117 97.1423189,2.98585546 95.9726324,3.81597787 Z M98.867078,7.11764706 C100.212585,7.11764706 101.045455,8.2171037 101.045455,10.0686426 C101.045455,12.8129198 98.6177747,18.7647059 94.3890371,18.7647059 C92.4668837,18.7647059 91.3295455,17.6216043 91.3295455,15.7700653 C91.3295455,13.1696182 93.8123911,7.11764706 98.867078,7.11764706 Z M95.3048172,16.1764706 C97.4785137,16.1764706 99.5300641,9.05882353 97.8189721,9.05882353 C95.9683446,9.05882353 93.2446768,16.1764706 95.3048172,16.1764706 Z M113.11352,3.93957014 C114.208078,3.93957014 114.086681,4.55887606 113.810057,4.90633549 C113.544776,5.23979253 113.321685,5.44262722 112.848239,5.80648946 C112.284243,6.2399636 111.654972,6.28677161 110.045575,6.28677161 C109.388243,6.28677161 108.672004,6.2767699 107.914371,6.26056713 C107.006884,8.48534766 105.908545,11.2114139 104.854784,13.971286 C104.543134,14.7874256 104.274072,15.3825274 104.274072,15.9582259 C104.274072,16.3416914 104.448206,16.6833499 104.945732,16.6833499 C105.666946,16.6833499 105.999493,16.6707477 106.114919,17.0334098 C106.313929,17.6585167 105.542764,18.7647059 103.677239,18.7647059 C102.184661,18.7647059 101.338866,17.6969232 101.338866,16.4467094 C101.338866,14.7714229 102.467853,12.3308054 103.254342,10.2956573 C103.881822,8.67197958 104.397259,7.29634429 104.820555,6.17575262 C102.104261,6.09133818 99.1374123,5.98992083 96.3966401,5.98992083 C95.0200846,5.98992083 96.6133625,4.55727579 97.7564787,4.50626707 C100.671783,4.37644486 103.328573,4.26742621 105.588934,4.1808114 C105.746152,3.78874434 105.882673,3.46608915 105.999095,3.2202471 C106.547368,2.06304917 106.666377,1.88481868 107.657449,1.61917325 C108.403738,1.41913903 109.017287,1.29411765 109.373914,1.29411765 C109.773328,1.29411765 109.846564,1.51915614 109.697306,1.89422029 C109.495908,2.40030685 109.190825,3.1448342 108.814297,4.06259118 C111.142122,3.98177735 112.679478,3.93957014 113.11352,3.93957014 Z M47.2285536,6.47058824 C46.3593828,6.47058824 45.8245393,5.7463526 46.0340967,4.85285047 C46.2436541,3.95952975 47.1180488,3.23529412 47.9872196,3.23529412 C48.8565913,3.23529412 49.3912338,3.95952975 49.1818774,4.85285047 C48.97232,5.7463526 48.0977244,6.47058824 47.2285536,6.47058824 Z M51.3171542,16.7008735 C51.7130552,16.7669305 52.2708797,16.4844528 52.3069067,17.0313565 C52.3635205,17.8891046 51.3666418,18.6655213 50.1708229,18.6655213 C49.0098433,18.6655213 48.2008196,17.7673059 48.0963018,16.2597006 C46.9768917,17.7720668 45.7494008,18.7563744 44.3724571,18.7563744 C42.9454321,18.7563744 42.4493681,17.4965321 42.4129452,16.2977875 C41.1044925,18.1299247 40.0050755,18.7067821 38.9288187,18.7067821 C37.4218216,18.7067821 37.0114702,17.5455293 36.9568359,16.3920128 C36.012612,17.6466975 34.8167931,18.7067821 33.4356926,18.7067821 C32.2563035,18.7067821 31.4615323,17.908148 31.2503191,16.5292842 C30.1980143,17.9101317 29.0669252,18.7067821 27.7610458,18.7067821 C26.6064006,18.7067821 25.897144,17.7976564 25.897144,16.5578494 C25.897144,16.1868991 25.9430685,15.7951201 26.0206651,15.3906455 C24.5764184,17.1577176 22.5494053,18.7647059 19.9338855,18.7647059 C17.9872404,18.7647059 16.8409091,17.3505324 16.8409091,15.2180643 C16.8409091,11.2506819 20.8494065,6.9700746 24.1403334,6.9700746 C25.3527802,6.9700746 26.556913,7.8238553 26.556913,9.27849608 C26.556913,11.5424829 24.197937,14.0030535 20.2060674,14.0030535 C20.071857,14.0030535 19.9532847,13.9992845 19.847777,13.993135 C19.7608768,14.3900716 19.7111912,14.7739159 19.7111912,15.1280048 C19.7111912,16.045462 20.1730097,16.7669305 21.2617374,16.7669305 C24.0577881,16.7669305 26.5899707,12.7880426 28.2478061,8.99423313 C28.2980855,8.87917904 28.3453957,8.7823749 28.3905284,8.69925824 C28.7951392,7.6992795 29.2708142,6.57928743 29.6970016,5.5997407 C27.2453848,5.54935495 24.90561,5.50948275 23.1917547,5.50948275 C21.8225311,5.50948275 23.110397,4.25420295 24.2474246,4.20361882 C26.233066,4.11534456 28.3493547,4.0270703 30.4300123,3.94395364 C30.5525437,3.67298142 30.6554779,3.44961779 30.7303032,3.29191433 C31.2756568,2.14415059 31.5221052,1.85294472 32.5118576,1.60498332 C33.1718245,1.43974184 33.3901639,1.35801376 33.9964863,1.30742963 C34.3923873,1.27430199 34.5707407,1.55201876 34.4585027,1.80335244 C34.2732211,2.21814227 33.9570941,2.9310809 33.5655481,3.82155989 C38.7868882,3.62219892 43.1821808,3.47619925 43.7786057,3.47619925 C44.8673334,3.47619925 44.7465836,4.09035005 44.4714324,4.43491722 C44.2075644,4.76559854 43.9856619,4.96674483 43.5147377,5.32757827 C42.953746,5.75744416 42.3278265,5.80386253 40.7270009,5.80386253 C39.0006747,5.80386253 35.9641142,5.73602029 32.758306,5.66540088 C31.4801397,8.59808999 29.8767407,12.3389349 29.047724,14.4989763 C28.5298855,15.8484814 28.519988,16.4197845 29.179757,16.4197845 C29.8458604,16.4197845 30.7140713,15.3184391 31.3855193,14.2781914 C32.0724075,11.3153502 34.5315465,7.10456887 37.7906033,7.10456887 C38.8630991,7.10456887 39.359163,7.75462448 39.5875979,8.3995225 C39.9254994,7.77743693 40.2647865,7.41700023 40.9908689,7.29242442 C42.1455141,7.0940553 43.0032336,7.4576659 43.0032336,7.4576659 C43.0032336,7.4576659 41.3042245,10.7224249 40.1412654,13.8963309 C39.6440138,15.2535724 39.1390421,16.2214154 40.0175464,16.2214154 C41.2672078,16.2214154 42.6487043,13.5319268 44.8509035,8.795864 C44.9061317,8.6770409 44.9548275,8.59531282 44.9985745,8.54056294 C45.3534998,7.86154544 45.6896197,7.47274196 46.4509373,7.34201671 C47.6055825,7.14364758 48.4634999,7.50725818 48.4634999,7.50725818 C48.4634999,7.50725818 46.7642929,10.7720172 45.6013338,13.9459232 C45.1040822,15.3031647 44.916821,16.2214154 45.6096477,16.2214154 C46.4877561,16.2214154 47.7645368,14.3991966 48.5127896,13.1943026 C49.8495493,8.13509646 54.0536218,0.647058824 57.4124457,0.647058824 C62.4684971,0.647058824 58.0245086,10.4052327 51.2296601,13.590049 C50.9537171,14.5075061 50.7894182,15.3061402 50.7894182,15.8875601 C50.7894182,16.3586868 50.90225,16.6314443 51.3171542,16.7008735 Z M34.238125,16.1764706 C35.6315546,16.1764706 36.7987559,13.3213615 38.2159091,9.87956187 C38.1248105,9.51494199 37.8955455,9.05882353 37.2272991,9.05882353 C35.495476,9.05882353 32.4193787,16.1764706 34.238125,16.1764706 Z M22.7854612,9.05882353 C22.010448,9.05882353 20.8079621,10.5997349 20.0795455,12.2939354 C20.0917011,12.2939354 20.1023833,12.2941176 20.1149073,12.2941176 C23.2459015,12.2941176 23.9595841,9.05882353 22.7854612,9.05882353 Z M57.4963035,2.58823529 C56.6110923,2.58823529 54.080425,7.03017612 52.4659091,11 C56.2098742,8.00706836 58.2374619,2.58823529 57.4963035,2.58823529 Z"
          id="large-logo"
        />
      </g>
    </g>
  </svg>
);
const SmallLogo = () => (
  <svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink">
    <defs>
      <path
        d="M13.2765,10.2612361 C14.493,7.00173609 15.6015,3.87873609 16.239,2.06223609 C18.8805,1.76523609 20.2365,2.56623609 20.2365,4.51173609 C20.2365,6.40773609 18.5895,8.28423609 15.099,9.59373609 C14.4435,9.83823609 13.8285,10.0632361 13.2765,10.2612361 M7.041,17.0187361 C5.499,20.1387361 4.548,21.4527361 3.336,21.6372361 C2.787,21.7212361 2.361,21.4707361 2.361,20.6787361 C2.361,19.8132361 3.297,16.6062361 8.316,14.0337361 C7.8075,15.3102361 7.3605,16.3722361 7.041,17.0187361 M21.8505,19.2597361 C21.2265,19.4487361 20.127,19.6047361 19.296,19.2537361 C18.51,18.9237361 18.021,18.1242361 17.4165,16.6137361 C16.8975,15.3192361 16.116,13.0962361 15.5775,11.4552361 C21.3105,9.42873609 24,6.85323609 24,3.96723609 C24,1.27773609 21.765,-0.493763909 16.806,0.122736091 C14.6115,0.395736091 13.005,0.692736091 11.3055,1.01823609 C4.9515,2.23023609 2.5695,4.92423609 2.5695,7.69623609 C2.5695,9.57273609 4.245,10.8717361 6.1875,10.8717361 C7.5105,10.8717361 7.638,10.1502361 7.245,9.86073609 C6.423,9.25623609 5.9295,8.65023609 5.9295,7.60923609 C5.9295,5.98023609 7.1775,3.89523609 11.766,2.89473609 C12.0615,2.83023609 12.315,2.77473609 12.5415,2.72523609 C11.781,4.83573609 10.431,8.55873609 9.201,11.7657361 C2.193,14.5227361 0,18.2952361 0,20.9172361 C0,22.8732361 1.569,23.9997361 3.423,23.9997361 C6.246,23.9997361 8.4675,22.1427361 10.245,17.9667361 C10.9335,16.3512361 11.6895,14.4402361 12.438,12.4827361 C12.9645,14.1717361 13.6725,16.3212361 14.1765,17.6262361 C14.685,18.9507361 15.1485,19.9017361 15.8415,20.5812361 C16.6815,21.4032361 17.7075,21.8127361 19.044,21.8127361 C20.7645,21.8127361 21.948,20.9772361 22.467,20.0667361 C22.8,19.4847361 22.392,19.0947361 21.8505,19.2597361"
        id="small-logo-path"
      />
    </defs>
    <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
      <mask id="small-logo-mask-2" fill="white">
        <use xlinkHref="#small-logo-path" />
      </mask>
      <use id="Icons-/-RMN-Logo" fill="#FFFFFF" xlinkHref="#small-logo-path" />
    </g>
  </svg>
);
/* tslint:enable */

interface HeaderState {
  breakpoint: string;
}

export class Header extends React.Component<HeaderProps> {
  readonly state: HeaderState = {
    breakpoint: 'small',
  };

  public render(): React.ReactElement<Header> {
    const {
      className,
      disableSearch,
      ...props
    } = this.props;
    const { breakpoint } = this.state;
    const isDesktop = breakpoint !== 'xsmall' && breakpoint !== 'small' && breakpoint !== 'medium';

    return (
      <StyledHeaderElement className={classNames(className)} {...props}>
        {isDesktop &&
          <Menu className="secondary-navigation" size="small" bg={colors.main.grapePurchase.dark} justify="flex-end">
            <Item path="/">Rx Saver</Item>
            <Item path="/">Genie</Item>
            <Item path="/">Everyday</Item>
            <Item path="/">Get The App</Item>
            <Item path="/">Blog</Item>
          </Menu>
        }
        {isDesktop ? this.renderDesktopMenu(disableSearch) : this.renderMobileMenu(disableSearch)}
      </StyledHeaderElement>
    );
  }
  private renderDesktopMenu(disableSearch?: boolean): React.ReactElement<any> {
    const { primary } = this.props;
    return (
      <Container whenBreakpoint={(breakpoint: string) => this.updateBreakpoint(breakpoint)}>
        <Flex alignItems="center" py={4}>
          <Box width={1 / 6}>
            <Flex justifyContent="center">
              <LargeLogo />
            </Flex>
          </Box>
          <Box width={5 / 12} px={2}>
            {!disableSearch && <AutoComplete
              size="large"
              prefix={<Icon type="search"/>}
              placeholder="Stores, brands, categories, etc…"
              dataSource={[1, 2, 3, 4, 5]}
            />}
          </Box>
          <Box width={5 / 12}>
            {primary
              ? primary
              : <Menu>
                <DropDown overlay={<div>1</div>}>
                  <Item path="/">Categories &nbsp;<Icon type="chevron-down" color="white" /></Item>
                </DropDown>
                <DropDown overlay={<div>1</div>}>
                  <Item path="/">Stores &nbsp;<Icon type="chevron-down" color="white" /></Item>
                </DropDown>
                <DropDown overlay={<div>1</div>}>
                  <Item path="/">More &nbsp;<Icon type="chevron-down" color="white" /></Item>
                </DropDown>
              </Menu>}
          </Box>
        </Flex>
      </Container>
    );
  }

  private renderMobileMenu(disableSearch?: boolean): React.ReactElement<any> {
    return (
      <Container whenBreakpoint={(breakpoint: string) => this.updateBreakpoint(breakpoint)}>
        <Flex alignItems="center" py={2}>
          <Box width={1 / 6}>
            <Flex justifyContent="center">
              <SmallLogo />
            </Flex>
          </Box>
          <Box flex={1} width={3 / 6}>
            {!disableSearch && <AutoComplete
              prefix={<Icon type="search"/>}
              placeholder="Stores, brands, categories, etc…"
              dataSource={[1, 2, 3, 4, 5]}
            />}
          </Box>
          <Box flex="0 0 120px" width={2 / 6}>
            <Flex justifyContent="flex-end" alignItems="center">
              <Box width={1 / 2}>
                <Flex justifyContent="center">
                  <Avatar />
                </Flex>
              </Box>
              <Box width={1 / 2}>
                <Flex justifyContent="center">
                  <Icon type="hamburger" color="white" />
                </Flex>
              </Box>
            </Flex>
          </Box>
        </Flex>
      </Container>
    );
  }

  private updateBreakpoint(breakpoint: string): void {
    this.setState({ ...this.state, breakpoint });
  }
}

export default Header;
